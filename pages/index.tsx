// Next
import type { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
// React
import { useEffect, useState } from "react";
// Providers
import { ToastContainer, toast } from "react-toastify";
import { storage } from "../firebase";
// Services
import { list, remove } from "../services/httpRequest";
// Models
import { ImageModel } from "../models/image";
// Components
import { Container } from "@components/container";
import { Title, Button } from "@components/shared";
import { Card } from "@components/card";
import { CardContainer } from "@components/cardContainer";

const Home: NextPage = ({ fb }: any) => {
  const [images, setImages] = useState<ImageModel[]>([]);

  const copyLink = (value: any) => {
    navigator.clipboard.writeText(value);
    toast.success("Successfully copied!");
  };

  const fetchData = async () => {
    const imageList = await list("image/list");
    setImages(imageList);
  };

  const removeImage = async (id: string, name: string) => {
    try {
      await remove("image/delete", id);
      const firebaseStorage = storage.ref(`images/${name}`);
      await firebaseStorage.delete();
      const updateImages = images.filter((image) => image._id !== id);
      setImages(updateImages);
    } catch (error) {
      console.log(error);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Title text="My Favorite Images" size="lg" color="#2196f3" />
        <Button text="Add new image" size="lg">
          <Link href="/new">Add new image</Link>
        </Button>
        <CardContainer>
          {images.map((image, index) => (
            <Card
              key={index}
              value={image}
              copyLink={copyLink}
              removeImage={removeImage}
            />
          ))}
        </CardContainer>
        <ToastContainer autoClose={2000} theme="dark" />
      </Container>
    </div>
  );
};

export default Home;
